---
QueryLanguage: JSONata
StartAt: GetState
States:
  GetState:
    Type: Task
    Resource: arn:aws:states:::aws-sdk:sfn:describeExecution
    Next: ValidState?
    Arguments:
      ExecutionArn: >-
        {% 'arn:aws:states:${region}:${account}:execution:${name}-api-state:'
        & $states.input.state %}
    Assign:
      stateStatus: "{% $states.result.Status %}"
    Output: "{% $states.input %}"
    Catch:
      - Next: InvalidState
        ErrorEquals:
          - States.ALL
  ValidState?:
    Type: Choice
    Default: InvalidState
    Choices:
      - Next: CompleteOAuth
        Condition: "{% $stateStatus = 'RUNNING' %}"
  InvalidState:
    Type: Succeed
    Output:
      statusCode: 302
      headers:
        location: ${slack_error_uri}
  CompleteOAuth:
    Type: Task
    Resource: ${oauth_function_arn}
    Next: OK?
    Arguments:
      redirect_uri: https://${domain_name}/oauth
      code: "{% $states.input.code %}"
  OK?:
    Type: Choice
    Default: PublishEvent
    Choices:
      - Next: OAuthError
        Condition: "{% $states.input.ok != true %}"
  OAuthError:
    Type: Succeed
    Output:
      statusCode: 302
      headers:
        location: ${slack_error_uri}
  PublishEvent:
    Type: Task
    Resource: arn:aws:states:::aws-sdk:eventbridge:putEvents
    End: true
    Arguments:
      Entries:
        - EventBusName: ${event_bus_name}
          Source: ${domain_name}
          DetailType: GET /oauth
          Detail: "{% $states.input %}"
    Output:
      statusCode: 302
      headers:
        location: ${slack_success_uri}
