---
StartAt: GetState
States:
  GetState:
    Type: Task
    Resource: arn:aws:states:::aws-sdk:sfn:describeExecution
    Next: ValidState?
    ResultPath: $.verification
    ResultSelector:
      status.$: $.Status
    Parameters:
      ExecutionArn.$: >-
        States.Format(
        'arn:aws:states:${region}:${account}:execution:${name}-api-state:{}',
        $.state)
  ValidState?:
    Type: Choice
    Default: InvalidState
    Choices:
      - Next: CompleteOAuth
        Variable: $.verification.status
        StringEquals: RUNNING
  InvalidState:
    Type: Pass
    End: true
    Parameters:
      statusCode: 302
      headers:
        location: ${slack_error_uri}
  CompleteOAuth:
    Type: Task
    Resource: ${oauth_function_arn}
    Next: OK?
    Parameters:
      redirect_uri: https://${domain_name}/oauth
      code.$: $.code
  OK?:
    Type: Choice
    Default: PublishEvent
    Choices:
      - Next: OAuthError
        Variable: $.ok
        BooleanEquals: false
  OAuthError:
    Type: Pass
    End: true
    Parameters:
      statusCode: 302
      headers:
        location: ${slack_error_uri}
  PublishEvent:
    Type: Task
    Resource: arn:aws:states:::aws-sdk:eventbridge:putEvents
    End: true
    ResultSelector:
      statusCode: 302
      headers:
        location: ${slack_success_uri}
    Parameters:
      Entries:
        - EventBusName: ${event_bus_name}
          Source: ${domain_name}
          DetailType: GET /oauth
          Detail.$: $
